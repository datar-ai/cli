# coding: utf-8

"""
    RiseML API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 1.1.0
    Contact: contact@riseml.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from pprint import pformat
from six import iteritems
import re


class UserLoginResponse(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, cluster_id=None, environment=None, ports=None, minio_access_key=None, minio_secret_key=None):
        """
        UserLoginResponse - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'cluster_id': 'str',
            'environment': 'str',
            'ports': 'UserLoginResponsePorts',
            'minio_access_key': 'str',
            'minio_secret_key': 'str'
        }

        self.attribute_map = {
            'cluster_id': 'cluster_id',
            'environment': 'environment',
            'ports': 'ports',
            'minio_access_key': 'minio_access_key',
            'minio_secret_key': 'minio_secret_key'
        }

        self._cluster_id = cluster_id
        self._environment = environment
        self._ports = ports
        self._minio_access_key = minio_access_key
        self._minio_secret_key = minio_secret_key


    @property
    def cluster_id(self):
        """
        Gets the cluster_id of this UserLoginResponse.


        :return: The cluster_id of this UserLoginResponse.
        :rtype: str
        """
        return self._cluster_id

    @cluster_id.setter
    def cluster_id(self, cluster_id):
        """
        Sets the cluster_id of this UserLoginResponse.


        :param cluster_id: The cluster_id of this UserLoginResponse.
        :type: str
        """

        self._cluster_id = cluster_id

    @property
    def environment(self):
        """
        Gets the environment of this UserLoginResponse.


        :return: The environment of this UserLoginResponse.
        :rtype: str
        """
        return self._environment

    @environment.setter
    def environment(self, environment):
        """
        Sets the environment of this UserLoginResponse.


        :param environment: The environment of this UserLoginResponse.
        :type: str
        """

        self._environment = environment

    @property
    def ports(self):
        """
        Gets the ports of this UserLoginResponse.


        :return: The ports of this UserLoginResponse.
        :rtype: UserLoginResponsePorts
        """
        return self._ports

    @ports.setter
    def ports(self, ports):
        """
        Sets the ports of this UserLoginResponse.


        :param ports: The ports of this UserLoginResponse.
        :type: UserLoginResponsePorts
        """

        self._ports = ports

    @property
    def minio_access_key(self):
        """
        Gets the minio_access_key of this UserLoginResponse.


        :return: The minio_access_key of this UserLoginResponse.
        :rtype: str
        """
        return self._minio_access_key

    @minio_access_key.setter
    def minio_access_key(self, minio_access_key):
        """
        Sets the minio_access_key of this UserLoginResponse.


        :param minio_access_key: The minio_access_key of this UserLoginResponse.
        :type: str
        """

        self._minio_access_key = minio_access_key

    @property
    def minio_secret_key(self):
        """
        Gets the minio_secret_key of this UserLoginResponse.


        :return: The minio_secret_key of this UserLoginResponse.
        :rtype: str
        """
        return self._minio_secret_key

    @minio_secret_key.setter
    def minio_secret_key(self, minio_secret_key):
        """
        Sets the minio_secret_key of this UserLoginResponse.


        :param minio_secret_key: The minio_secret_key of this UserLoginResponse.
        :type: str
        """

        self._minio_secret_key = minio_secret_key

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
